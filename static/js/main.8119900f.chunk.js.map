{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","style","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeAbleUrl","axios","get","console","log","fetchDailyData","modifiedData","map","total","date","reportDate","fetchCountries","countries","name","Chart","state","dailyData","this","setState","props","barChart","labels","datasets","backgroundColor","label","options","legend","display","title","text","lineChart","length","borderColor","fil","fill","Component","CountryPicker","FormControl","NativeSelect","defaultValue","onChange","e","handleCountryChange","target","i","key","App","fetchedData","image","src","CovidLogo","alt","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8119900f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2M6HG\",\"card\":\"Cards_card__263Jd\",\"confirmed\":\"Cards_confirmed__26C9r\",\"recovered\":\"Cards_recovered__3e8UF\",\"deaths\":\"Cards_deaths__2-D27\"};","import React from 'react';\r\n\r\nimport {Card, Grid,Typography, CardContent} from '@material-ui/core';\r\nimport style from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data:{confirmed,recovered,deaths,lastUpdate}}) => {\r\n    if(!confirmed)\r\n    {\r\n        return 'Loading...';\r\n    }\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.confirmed)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recoverd</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n\r\n                <Grid item component={Card} xs={12} md={3} className={cx(style.card,style.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\"/>\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;\r\n","import axios from 'axios';\r\n\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData =async (country)=>{\r\n    let changeAbleUrl=url;\r\n    if(country)\r\n    {\r\n        changeAbleUrl=`${url}/countries/${country}`;\r\n    }\r\n    try{\r\n       const {data:{confirmed,recovered,deaths,lastUpdate}}= await axios.get(changeAbleUrl);\r\n       return {confirmed,recovered,deaths,lastUpdate};\r\n    }catch(err)\r\n    {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData=async ()=>{\r\n    try{\r\n        const {data}=await axios.get(`${url}/daily`);\r\n        const modifiedData=data.map(item=>({\r\n            confirmed:item.confirmed.total,\r\n            deaths:item.deaths.total,\r\n            date:item.reportDate\r\n        }));\r\n        return modifiedData;\r\n    }\r\n    catch(err)\r\n    {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nexport const fetchCountries =async ()=>{\r\n    try{\r\n       const {data:{countries}}=await axios.get(`${url}/countries`);\r\n       return countries.map((country)=>(country.name));\r\n    }catch(err)\r\n    {\r\n        console.log(err);\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport style from './Chart.module.css';\r\n\r\nclass Chart extends Component {\r\n    state={\r\n        dailyData:[]\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        this.setState({dailyData:await fetchDailyData()})\r\n    }\r\n\r\n    render(props) \r\n    {\r\n\r\n        const {data,country}=this.props;\r\n        const {dailyData}=this.state;\r\n        const barChart=(\r\n            data.confirmed?\r\n            <Bar\r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    backgroundColor:['rgba(0,0,255,0.5)','rgba(0,255,0,0.5)','rgba(255,0,0,0.5)'],\r\n                    label:'People',\r\n                    data:[data.confirmed.value,data.recovered.value,data.deaths.value]\r\n                }]\r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true,text:`Current state in ${country}`}\r\n            }}\r\n            />\r\n            :null\r\n        )\r\n\r\n        const lineChart=(\r\n        dailyData.length?\r\n        <Line\r\n        data={{\r\n            labels:dailyData.map(item=>(item.date)),\r\n            datasets:[{\r\n                data:dailyData.map(item=>(item.confirmed)),\r\n                label:'Infected',\r\n                borderColor:'#3333ff',\r\n                fil:true\r\n            },{\r\n                data:dailyData.map(item=>(item.deaths)),\r\n                label:'Deaths',\r\n                borderColor:'red',\r\n                backgroundColor:'rgba(255,0,0,0.5)',\r\n                fill:true\r\n            }]\r\n        }}\r\n        />:null);\r\n        return (\r\n            <div className={style.container}>\r\n                {country?barChart:lineChart}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chart;\r\n","import React, { Component } from 'react';\r\nimport {fetchCountries} from'../../api';\r\nimport {FormControl,NativeSelect} from '@material-ui/core';\r\n\r\nclass CountryPicker extends Component {\r\n    state={\r\n        country:[]\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        this.setState({country:await fetchCountries()})\r\n    }\r\n    \r\n    render(props) \r\n    {\r\n        return (\r\n            <div>\r\n                <FormControl>\r\n                    <NativeSelect defaultValue=\"\" onChange={(e)=>this.props.handleCountryChange(e.target.value)}>\r\n                        <option value=''>Global</option>\r\n                        {this.state.country.map((item,i)=>(<option key={i} value={item}>{item}</option>))}\r\n                    </NativeSelect>\r\n                </FormControl>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport {Cards,Chart,CountryPicker} from './components/index'\r\nimport style from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport CovidLogo from './images/image.png';\r\n\r\nclass App extends React.Component{\r\n    state={\r\n        data:{},\r\n        country:\"\"\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        const fetchedData=await fetchData();\r\n        this.setState({ data:fetchedData })\r\n    }\r\n\r\n    handleCountryChange=async(country)=>{\r\n        this.setState({\r\n            data:await fetchData(country),\r\n            country:country\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        const {data,country}=this.state;\r\n        return(\r\n            <div className={style.container}>\r\n                <img className={style.image} src={CovidLogo} alt=\"Covid-19\"/>\r\n                <Cards data={data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from'./App';\r\n\r\nReactDOM.render(<App/>,document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3PySH\",\"image\":\"App_image__1woK9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__WKXKk\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}